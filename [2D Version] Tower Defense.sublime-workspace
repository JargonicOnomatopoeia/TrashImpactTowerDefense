{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"t",
				"tower"
			],
			[
				"p",
				"placementLocation"
			],
			[
				"turre",
				"turretToBuild"
			],
			[
				"c",
				"Color"
			],
			[
				"fade",
				"fadeStart"
			],
			[
				"high",
				"highlight\tGameObject"
			],
			[
				"sta",
				"start\tColor"
			],
			[
				"wa",
				"waypoint\tGameObject[]"
			],
			[
				"wayP",
				"waypointClone\tGameObject"
			],
			[
				"I",
				"identity\tQuaternion { get; }"
			],
			[
				"way",
				"waypoint\tGameObject[]"
			],
			[
				"In",
				"Instantiate(Object original)\tObject"
			],
			[
				"wapoint",
				"waypointData\tstring[]"
			],
			[
				"wayp",
				"waypoints\tCoordinates[]"
			],
			[
				"C",
				"Camera\tCamera"
			],
			[
				"Vec",
				"Vector3\tVector3"
			],
			[
				"co",
				"corners\tCoordinates[]"
			],
			[
				"deg",
				"Debug\tDebug"
			],
			[
				"map",
				"mapData\tstring[]"
			],
			[
				"long",
				"longRow\tint"
			],
			[
				"Is",
				"IsNumber(char c)\tbool"
			],
			[
				"is",
				"IsNumber(char c)\tbool"
			],
			[
				"tile",
				"tileNumber\tchar"
			],
			[
				"to",
				"ToCharArray()\tchar[]"
			],
			[
				"s",
				"string\tstring"
			],
			[
				"conv",
				"ConvertTextToMap()\tstring[]"
			],
			[
				"En",
				"Environment\tEnvironment"
			],
			[
				"re",
				"Replace(char oldChar, char newChar)\tstring"
			],
			[
				"Res",
				"Resources\tResources"
			],
			[
				"Text",
				"TextAsset\tTextAsset"
			],
			[
				"Waypo",
				"Waypoints\tList<Coordinates>"
			],
			[
				"Gam",
				"GameObject\tGameObject"
			],
			[
				"ca",
				"cameraStart()\tvoid"
			],
			[
				"col",
				"columnNumber\tint"
			],
			[
				"Ve",
				"Vector2()\tVector2()"
			],
			[
				"se",
				"SetCoordinates(Coordinates crd, Vector3 tilePos)\tvoid"
			],
			[
				"y",
				"y\tint"
			],
			[
				"Di",
				"Dictionary<TKey, TValue>()\tDictionary()"
			],
			[
				"get",
				"GetComponent<T>()\tT"
			],
			[
				"i",
				"IdentifySides\tVector3 { get; }"
			],
			[
				"po",
				"position\tTileProperties"
			],
			[
				"Vecto",
				"Vector3\tVector3"
			],
			[
				"chil",
				"GetChild(int index)\tTransform"
			],
			[
				"chi",
				"GetChild(int index)\tTransform"
			],
			[
				"ch",
				"childCount\tint { get; }"
			],
			[
				"cl",
				"Clamp(int value, int min, int max)\tint"
			],
			[
				"Key",
				"GetKeyUp(string name)\tbool"
			],
			[
				"Do",
				"DownArrow\tKeyCode"
			],
			[
				"Right",
				"RightArrow\tKeyCode"
			],
			[
				"Lef",
				"LeftArrow\tKeyCode"
			],
			[
				"e",
				"Equals\tKeyCode"
			],
			[
				"m",
				"Minus\tKeyCode"
			],
			[
				"GetK",
				"GetKeyDown(string name)\tbool"
			],
			[
				"getK",
				"GetKeyDown(string name)\tbool"
			],
			[
				"speed",
				"scrollSpeed\tfloat"
			],
			[
				"o",
				"orthographicSize\tfloat { get; set; }"
			],
			[
				"camera",
				"cameraPos\tVector3"
			],
			[
				"cam",
				"cameraPos\tVector3"
			],
			[
				"v",
				"ViewportToWorldPoint(Vector3 position)\tVector3"
			],
			[
				"Game",
				"GameObject\tGameObject"
			],
			[
				"Ob",
				"objectToMiddle()\tvoid"
			],
			[
				"Ma",
				"Mathf\tMathf"
			],
			[
				"a",
				"Abs(int value)\tint"
			],
			[
				"Colm",
				"columnNumber\tfloat"
			],
			[
				"getA",
				"GetAxis(string axisName)\tfloat"
			],
			[
				"getM",
				"GetMouseButtonDown(int button)\tbool"
			],
			[
				"de",
				"Debug\tDebug"
			],
			[
				"Ti",
				"TileProperties\tTileProperties"
			],
			[
				"g",
				"GetComponent<T>()\tT"
			],
			[
				"til",
				"GetComponents(Type type, List<Component> results)\tvoid"
			],
			[
				"b",
				"bounds\tBounds { get; }"
			],
			[
				"Spr",
				"SpriteRenderer\tSpriteRenderer"
			],
			[
				"rec",
				"RectTransform\tRectTransform"
			],
			[
				"ge",
				"GetComponent(string type)\tComponent"
			],
			[
				"Vect",
				"Vector3()\tVector3()"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/C/laragon/www/studentTeacherPortal/server.php",
			"settings":
			{
				"buffer_size": 563,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "pa",
		"selected_items":
		[
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			]
		],
		"width": 564.0
	},
	"console":
	{
		"height": 130.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/UnityGames/[2D Version] Tower Defense/Assets/Script"
	],
	"file_history":
	[
		"/C/laragon/www/studentTeacherPortal/routes/web.php",
		"/C/laragon/www/studentTeacherPortal/routes/api.php",
		"/C/laragon/www/studentTeacherPortal/routes/console.php",
		"/C/laragon/www/studentTeacherPortal/routes/channels.php",
		"/D/UnityGames/[2D Version] Tower Defense/Assets/Script/MouseEventOnTiles.cs",
		"/D/UnityGames/[2D Version] Tower Defense/Assets/Script/GameFloorSpawner.cs",
		"/D/UnityGames/[2D Version] Tower Defense/Assets/Script/Shop.cs",
		"/D/UnityGames/[2D Version] Tower Defense/Assets/Script/TileProperties.cs",
		"/D/UnityGames/[2D Version] Tower Defense/Assets/Script/TurretBuildManager.cs",
		"/D/UnityGames/[2D Version] Tower Defense/Assets/Prefab/Tile/[Tiles] AvailableV1.prefab",
		"/D/UnityGames/[2D Version] Tower Defense/Assets/Script/Coordinates.cs",
		"/D/UnityGames/[2D Version] Tower Defense/Assets/Script/CameraController.cs",
		"/D/UnityGames/PrototypeTowerDefense/Assets/Script/LevelManager.cs",
		"/D/UnityGames/PrototypeTowerDefense/Assets/Script/TileScript.cs",
		"/D/UnityGames/PrototypeTowerDefense/PrototypeTowerDefense.sln",
		"/D/UnityGames/[2D Version] Tower Defense/[2D Version] Tower Defense.sublime-project"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"(),"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/C/laragon/www/studentTeacherPortal/server.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 563,
						"regions":
						{
						},
						"selection":
						[
							[
								563,
								563
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 102.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.variable_get":
	{
		"height": 103.0
	},
	"pinned_build_system": "",
	"project": "[2D Version] Tower Defense.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 249.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
